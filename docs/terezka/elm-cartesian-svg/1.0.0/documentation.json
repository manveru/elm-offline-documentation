[
  {
    "name": "Svg.Coordinates",
    "comment": " Cartesian to SVG coordinate translation helpers.\n\n# Plane\n@docs PlaneConfig, AxisConfig, Plane, Axis, Point, point, plane\n\n# Cartesian to SVG\n@docs toSVGX, toSVGY, scaleSVG\n\n# SVG to cartesian\n@docs toCartesianX, toCartesianY, scaleCartesian\n\n# Helpers\n@docs place, placeWithOffset\n\n",
    "aliases": [
      {
        "name": "Axis",
        "comment": " ",
        "args": [],
        "type": "{ marginLower : Float , marginUpper : Float , length : Float , min : Float , max : Float }"
      },
      {
        "name": "AxisConfig",
        "comment": " ",
        "args": [],
        "type": "{ marginLower : Float , marginUpper : Float , length : Float , min : Float -> Float , max : Float -> Float }"
      },
      {
        "name": "Plane",
        "comment": " ",
        "args": [],
        "type": "{ x : Svg.Coordinates.Axis, y : Svg.Coordinates.Axis }"
      },
      {
        "name": "PlaneConfig",
        "comment": " ",
        "args": [],
        "type": "{ x : Svg.Coordinates.AxisConfig, y : Svg.Coordinates.AxisConfig }"
      },
      {
        "name": "Point",
        "comment": " ",
        "args": [],
        "type": "{ x : Float, y : Float }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "place",
        "comment": " A transform translate(x, y) SVG attribute. Beware that using this and\n  and another transform attribute on the same node, will overwrite the first.\n  If that's the case, just concat them:\n\n    myTransformAttribute : Svg.Attribute msg\n    myTransformAttribute =\n      transform <|\n        \"translate(\" ++ toString (toSVGX plane x) ++ \",\" ++ toString (toSVGY plane y) ++ \") \"\n        ++ \"rotateX(\" ++ whatever ++ \")\"\n",
        "type": "Svg.Coordinates.Plane -> Svg.Coordinates.Point -> Svg.Attribute msg"
      },
      {
        "name": "placeWithOffset",
        "comment": " Place at coordinate, but with an SVG offset. See `place` above for important notes.\n",
        "type": "Svg.Coordinates.Plane -> Svg.Coordinates.Point -> Float -> Float -> Svg.Attribute msg"
      },
      {
        "name": "plane",
        "comment": " Produce the plane fitting your points.\n",
        "type": "Svg.Coordinates.PlaneConfig -> List Svg.Coordinates.Point -> Svg.Coordinates.Plane"
      },
      {
        "name": "point",
        "comment": " Produce a point. First argument is the x-coordinate,\n  second is then y-coordinate.\n",
        "type": "Float -> Float -> Svg.Coordinates.Point"
      },
      {
        "name": "scaleCartesian",
        "comment": " For scaling a SVG value to a cartesian value.\n\n  Note that this will _not_ return a coordinate on the plane,\n  but the scaled value.\n",
        "type": "Svg.Coordinates.Axis -> Float -> Float"
      },
      {
        "name": "scaleSVG",
        "comment": " For scaling a cartesian value to a SVG value.\n\n  Note that this will _not_ return a coordinate on the plane,\n  but the scaled value.\n",
        "type": "Svg.Coordinates.Axis -> Float -> Float"
      },
      {
        "name": "toCartesianX",
        "comment": " Translate cartesian x to SVG x.\n",
        "type": "Svg.Coordinates.Plane -> Float -> Float"
      },
      {
        "name": "toCartesianY",
        "comment": " Translate cartesian y to SVG y.\n",
        "type": "Svg.Coordinates.Plane -> Float -> Float"
      },
      {
        "name": "toSVGX",
        "comment": " Translate SVG x to cartesian x.\n",
        "type": "Svg.Coordinates.Plane -> Float -> Float"
      },
      {
        "name": "toSVGY",
        "comment": " Translate SVG y to cartesian y.\n",
        "type": "Svg.Coordinates.Plane -> Float -> Float"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]