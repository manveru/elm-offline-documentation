[
  {
    "name": "CoMidi",
    "comment": "  Library for parsing MIDI file contents using parser combinators,\n\n# Definition\n\n# Data Types\n@docs Header, Track, MidiEvent, MidiMessage,  MidiRecording\n\n# Functions\n@docs normalise, parse, translateRunningStatus\n\n",
    "aliases": [
      {
        "name": "Header",
        "comment": " Midi Header ",
        "args": [],
        "type": "{ formatType : Int, trackCount : Int, ticksPerBeat : Int }"
      },
      {
        "name": "MidiMessage",
        "comment": " Midi Message ",
        "args": [],
        "type": "( CoMidi.Ticks, CoMidi.MidiEvent )"
      },
      {
        "name": "MidiRecording",
        "comment": " Midi Recording ",
        "args": [],
        "type": "( CoMidi.Header, List CoMidi.Track )"
      },
      {
        "name": "Track",
        "comment": " Midi Track ",
        "args": [],
        "type": "List CoMidi.MidiMessage"
      }
    ],
    "types": [
      {
        "name": "MidiEvent",
        "comment": " Midi Event ",
        "args": [],
        "cases": [
          [
            "SequenceNumber",
            [
              "Int"
            ]
          ],
          [
            "Text",
            [
              "String"
            ]
          ],
          [
            "Copyright",
            [
              "String"
            ]
          ],
          [
            "TrackName",
            [
              "String"
            ]
          ],
          [
            "InstrumentName",
            [
              "String"
            ]
          ],
          [
            "Lyrics",
            [
              "String"
            ]
          ],
          [
            "Marker",
            [
              "String"
            ]
          ],
          [
            "CuePoint",
            [
              "String"
            ]
          ],
          [
            "ChannelPrefix",
            [
              "Int"
            ]
          ],
          [
            "Tempo",
            [
              "Int"
            ]
          ],
          [
            "SMPTEOffset",
            [
              "Int",
              "Int",
              "Int",
              "Int",
              "Int"
            ]
          ],
          [
            "TimeSignature",
            [
              "Int",
              "Int",
              "Int",
              "Int"
            ]
          ],
          [
            "KeySignature",
            [
              "Int",
              "Int"
            ]
          ],
          [
            "SequencerSpecific",
            [
              "String"
            ]
          ],
          [
            "SysEx",
            [
              "String"
            ]
          ],
          [
            "Unspecified",
            [
              "Int",
              "List Int"
            ]
          ],
          [
            "NoteOn",
            [
              "Int",
              "Int",
              "Int"
            ]
          ],
          [
            "NoteOff",
            [
              "Int",
              "Int",
              "Int"
            ]
          ],
          [
            "NoteAfterTouch",
            [
              "Int",
              "Int",
              "Int"
            ]
          ],
          [
            "ControlChange",
            [
              "Int",
              "Int",
              "Int"
            ]
          ],
          [
            "ProgramChange",
            [
              "Int",
              "Int"
            ]
          ],
          [
            "ChannelAfterTouch",
            [
              "Int",
              "Int"
            ]
          ],
          [
            "PitchBend",
            [
              "Int",
              "Int"
            ]
          ],
          [
            "RunningStatus",
            [
              "Int",
              "Int"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "normalise",
        "comment": " normalise the input before we parse by masking off all but the least significant 8 bits ",
        "type": "String -> String"
      },
      {
        "name": "parse",
        "comment": " entry point - Parse a normalised MIDI file image ",
        "type": "String -> Result.Result String CoMidi.MidiRecording"
      },
      {
        "name": "translateRunningStatus",
        "comment": " translate the Running Status messages in each track to the expanded form (NoteOn/NoteOff etc) ",
        "type": "Result.Result String CoMidi.MidiRecording -> Result.Result String CoMidi.MidiRecording"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  }
]