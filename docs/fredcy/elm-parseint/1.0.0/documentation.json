[{"name":"ParseInt","comment":" Convert String value to Int.\n\n# Functions\n@docs parseInt, parseIntOct, parseIntHex, parseIntRadix\n\n# Errors\n@docs Error\n","aliases":[],"types":[{"name":"Error","comment":" Possible Result.Err returns from the parseInt functions.\n","args":[],"cases":[["InvalidChar",["Char"]],["OutOfRange",["Char"]],["InvalidRadix",["Int"]]]}],"values":[{"name":"parseInt","comment":" Convert String to Int assuming base 10.\n\n    parseInt \"314159\" == Ok 314159\n    parseInt \"foo\" = Err (OutOfRange 'o')\n\n","type":"String -> Result.Result ParseInt.Error Int"},{"name":"parseIntHex","comment":" Convert String to Int assuming base 16 (hexadecimal). No leading characters\nare expected; input starting with \"0x\" (or any other out of range character)\nwill cause an `Err` return.\n","type":"String -> Result.Result ParseInt.Error Int"},{"name":"parseIntOct","comment":" Convert String to Int assuming base 8 (octal). No leading '0' is required.\n","type":"String -> Result.Result ParseInt.Error Int"},{"name":"parseIntRadix","comment":" Convert String to Int assuming given radix. Radix can be any of\n2..36. Leading zeroes are ignored. Valid characters are the alphanumerics:\nthose in the ASCII range [0-9a-zA-Z]. Case does not matter. For radixes beyond\n16 the normal [A-F] range for hexadecimal is extended in the natural way. Any\ninvalid character results in a `Err` return. Any valid character outside of the\nrange defined by the radix also results in an `Err`. An `Ok` return means that the\nentire input string was consumed. The empty string results in `Ok 0`\n\n    parseIntRadix 16 \"DEADBEEF\" = Ok 3735928559\n","type":"Int -> String -> Result.Result ParseInt.Error Int"}],"generated-with-elm-version":"0.16.0"}]