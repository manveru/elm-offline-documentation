[
  {
    "name": "Function.Extra",
    "comment": "\n## Compose a two parameter function with a single parameter function\n@docs (>>>), (<<<)\n\n## Compose a three parameter function with a single parameter function\n@docs (>>>>), (<<<<)\n\n## Function properties\n@docs map, map2, map3, ap, andThen, singleton, on\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "<<<",
        "comment": "\n```elm\n(\\x y -> bar <| foo x y)\n-- becomes\nbar <<< foo\n```\n",
        "type": "(c -> d) -> (a -> b -> c) -> a -> b -> d"
      },
      {
        "name": "<<<<",
        "comment": "\n```elm\n(\\x y z -> bar <| foo x y z)\n-- becomes\nbar <<<< foo\n```\n",
        "type": "(d -> e) -> (a -> b -> c -> d) -> a -> b -> c -> e"
      },
      {
        "name": ">>>",
        "comment": "\n```elm\n(\\x y -> foo x y |> bar)\n-- becomes\nfoo >>> bar\n```\n",
        "type": "(a -> b -> c) -> (c -> d) -> a -> b -> d"
      },
      {
        "name": ">>>>",
        "comment": "\n```elm\n(\\x y z -> foo x y z |> bar)\n-- becomes\nfoo >>>> bar\n```\n",
        "type": "(a -> b -> c -> d) -> (d -> e) -> a -> b -> c -> e"
      },
      {
        "name": "andThen",
        "comment": "\nThe functions are Monads and so should have an `andThen`.\n",
        "type": "(a -> b) -> (b -> a -> c) -> a -> c"
      },
      {
        "name": "ap",
        "comment": "",
        "type": "(x -> a -> b) -> (x -> a) -> x -> b"
      },
      {
        "name": "map",
        "comment": "",
        "type": "(a -> b) -> (x -> a) -> x -> b"
      },
      {
        "name": "map2",
        "comment": "",
        "type": "(a -> b -> c) -> (x -> a) -> (x -> b) -> x -> c"
      },
      {
        "name": "map3",
        "comment": "",
        "type": "(a -> b -> c -> d) -> (x -> a) -> (x -> b) -> (x -> c) -> x -> d"
      },
      {
        "name": "on",
        "comment": "\n```elm\nsortBy (compare `on` fst)\n```\n",
        "type": "(b -> b -> c) -> (a -> b) -> a -> a -> c"
      },
      {
        "name": "singleton",
        "comment": "\nThe functions are Monads and so should have a `singleton`.\n",
        "type": "a -> b -> a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  }
]