[
  {
    "name": "Fuzzy",
    "comment": "This is library for performing fuzzy string matching.\n\n# Matching\n@docs match",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "match",
        "comment": "Perform fuzzy matching between a List String (needle) and another List String (hay).\nThe order of the arguments are significant. Lower score is better. Each element in the\nLists represents one \"word\".\n\n    let\n        query = \"/usr/lcoa/bin/sh\"\n        target = \"/usr/local/bin/sh\"\n        sep = \"/\"\n    in\n        Fuzzy.match (String.split query) (String.split hay) == 2.001\n\n    Fuzzy.match [\"test\"] [\"test]\" == 0\n    Fuzzy.match [\"tst\"] [\"test\"] == 0.001\n    List.sortBy (\\hay -> Fuzzy.match [\"hrdevi\"] [hay]) [\"screen\", \"disk\", \"harddrive\", \"keyboard\", \"mouse\", \"computer\"] == [\"harddrive\",\"disk\",\"screen\",\"mouse\",\"keyboard\",\"computer\"]",
        "type": "List String -> List String -> Float"
      }
    ],
    "generated-with-elm-version": "0.15.1"
  }
]