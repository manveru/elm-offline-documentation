[{"name":"Fuzzy","comment":"This is library for performing fuzzy string matching.\n\n# Matching\n@docs match","aliases":[],"types":[],"values":[{"name":"match","comment":"Perform fuzzy matching between a List String (needle) and another List String (hay).\nThe order of the arguments are significant. Lower score is better. Each element in the\nLists represents one \"word\".\n\n    let\n        query = \"/usr/lcoa/bin/sh\"\n        target = \"/usr/local/bin/sh\"\n        sep = \"/\"\n    in\n        Fuzzy.match (String.split sep query) (String.split sep hay) == 101\n\n    Fuzzy.match [\"test\"] [\"test]\" == 0\n    Fuzzy.match [\"tst\"] [\"test\"] == 1\n    Fuzzy.match [\"test\"] [\"tste\"] == 100\n    Fuzzy.match [\"test\"] [\"tst\"] == 1000\n    List.sortBy (\\hay -> Fuzzy.match [\"hrdevi\"] [hay]) [\"screen\", \"disk\", \"harddrive\", \"keyboard\", \"mouse\", \"computer\"] == [\"harddrive\",\"keyboard\",\"disk\",\"screen\",\"computer\",\"mouse\"]","type":"List String -> List String -> Int"}],"generated-with-elm-version":"0.15.1"}]