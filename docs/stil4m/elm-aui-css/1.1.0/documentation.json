[
  {
    "name": "Aui.Dropdown",
    "comment": " Functions to present AUI buttons and groups.\n\n\n# Types\n\n@docs Style, Alignment, Config\n\n# Model\n\n@docs Model, Msg, initialModel, open, close\n\n# Update\n\n@docs update\n\n# Presentation\n\n@docs dropdown, dropdownSection\n\n# Utility\n\n@docs baseConfig, withAlignment, withStyle\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configuration record to show a dropdown component.\n",
        "args": [
          "a"
        ],
        "type": "{ zIndexBackdrop : Int , style : Aui.Dropdown.Style , disabled : Bool , msgMap : Aui.Dropdown.Msg -> a , alignment : Aui.Dropdown.Alignment }"
      },
      {
        "name": "Model",
        "comment": " Model for the dropdown component.\n",
        "args": [],
        "type": "{ open : Bool }"
      },
      {
        "name": "Style",
        "comment": " Style for the dropdown.\n",
        "args": [],
        "type": "Aui.Buttons.Style"
      }
    ],
    "types": [
      {
        "name": "Alignment",
        "comment": " Alignment relative to the button for the dropdown container.\n",
        "args": [],
        "cases": [
          [
            "Left",
            []
          ],
          [
            "Right",
            []
          ]
        ]
      },
      {
        "name": "Msg",
        "comment": " Messages being sent by the dropdown component\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "baseConfig",
        "comment": " Create a base configuration with a Msg mapping function.\n\n    type Msg = DropdownMsg Aui.Dropdown.Msg\n\n    dropdown (baseConfig DropdownMsg) ...\n",
        "type": "(Aui.Dropdown.Msg -> a) -> Aui.Dropdown.Config a"
      },
      {
        "name": "close",
        "comment": " Change a dropdown to a closed state. Convenient when you handle an action from an item in the dropdown in your own update function.\n",
        "type": "Aui.Dropdown.Model -> Aui.Dropdown.Model"
      },
      {
        "name": "dropdown",
        "comment": " Present a dropdown given a configuration, button content, dropdown content and a model.\n\n    dropdown (baseConfig DropdownMsg |> withStyle Primary |> withAlignment Right)\n        [ text \"Open me\"]\n        [ dropdownSection (Just \"Section Title\")\n            [ ul []\n                [ li [] a [] [text \"Item 1\"]\n                , li [] a [] [text \"Item 2\"]\n                ]\n            ]\n        ]\n        dropdownModel\n",
        "type": "Aui.Dropdown.Config a -> List (Html.Html Aui.Dropdown.Msg) -> List (Html.Html a) -> Aui.Dropdown.Model -> Html.Html a"
      },
      {
        "name": "dropdownSection",
        "comment": " Creates a section for within a dropdown container.\n",
        "type": "Maybe.Maybe String -> List (Html.Html a) -> Html.Html a"
      },
      {
        "name": "initialModel",
        "comment": " Default model for a dropdown component\n",
        "type": "Aui.Dropdown.Model"
      },
      {
        "name": "open",
        "comment": " Change a dropdown to an opened state.\n",
        "type": "Aui.Dropdown.Model -> Aui.Dropdown.Model"
      },
      {
        "name": "update",
        "comment": " Update function for the dropdown component. This should be called from within your update function when handling `Msg`\n",
        "type": "Aui.Dropdown.Msg -> Aui.Dropdown.Model -> Aui.Dropdown.Model"
      },
      {
        "name": "withAlignment",
        "comment": " Align the container for the dropdown to the side of the dropdown button.\n",
        "type": "Aui.Dropdown.Alignment -> Aui.Dropdown.Config a -> Aui.Dropdown.Config a"
      },
      {
        "name": "withStyle",
        "comment": " Set the style of the dropdown button.\n",
        "type": "Aui.Dropdown.Style -> Aui.Dropdown.Config a -> Aui.Dropdown.Config a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Select",
    "comment": " Functions to present AUI select.\n\n# Types\n\n@docs Msg, Config, Ports\n\n# Model\n\n@docs Model, initialModel\n\n# Update\n\n@docs update\n\n# Presentation\n\n@docs singleSelect\n\n# Utility\n\n@docs baseConfig\n\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configuration record to show a dropdown component.\n",
        "args": [],
        "type": "{ zIndexBackdrop : Int, placeholder : Maybe.Maybe String }"
      },
      {
        "name": "Model",
        "comment": " Model for the select component.\n",
        "args": [],
        "type": "{ ports : Aui.Select.Ports , open : Bool , query : Maybe.Maybe String , items : List String , value : Maybe.Maybe String , identifier : String , highlighted : Maybe.Maybe String }"
      },
      {
        "name": "Ports",
        "comment": " Required ports for this module. These should be injected in the module because ports cannot be published in a package. :/\n",
        "args": [],
        "type": "{ blur : String -> Platform.Cmd.Cmd Aui.Select.Msg , focus : String -> Platform.Cmd.Cmd Aui.Select.Msg }"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " Messages being sent by the select component\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "baseConfig",
        "comment": " Create a base configuration for presenting a select.\n",
        "type": "Aui.Select.Config"
      },
      {
        "name": "initialModel",
        "comment": " Initial model for a select.\n",
        "type": "Aui.Select.Ports -> String -> List String -> ( Aui.Select.Model, Platform.Cmd.Cmd Aui.Select.Msg )"
      },
      {
        "name": "singleSelect",
        "comment": " Create a single select with a configuration and a model.\n",
        "type": "Aui.Select.Config -> Aui.Select.Model -> Html.Html Aui.Select.Msg"
      },
      {
        "name": "update",
        "comment": " Update function for the select component. This should be called from within your update function when handling `Msg`\n",
        "type": "Aui.Select.Msg -> Aui.Select.Model -> ( Aui.Select.Model, Platform.Cmd.Cmd Aui.Select.Msg )"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Avatars",
    "comment": " Functions to present AUI avatars.\n\n\n# Types\n\n@docs Size, Config\n\n# Presentation\n\n@docs avatar\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configuration record to present avatar\n",
        "args": [],
        "type": "{ size : Aui.Avatars.Size, project : Bool }"
      }
    ],
    "types": [
      {
        "name": "Size",
        "comment": " Representation of the size of an avatar.\n",
        "args": [],
        "cases": [
          [
            "XSmall",
            []
          ],
          [
            "Small",
            []
          ],
          [
            "Medium",
            []
          ],
          [
            "Large",
            []
          ],
          [
            "XLarge",
            []
          ],
          [
            "XXLarge",
            []
          ],
          [
            "XXXLarge",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "avatar",
        "comment": " Function to convert a configuration record and an source url to an HTML element\n\n    avatar {size = Large, project = False}\n        \"http://myimage.net\"\n",
        "type": "Aui.Avatars.Config -> String -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Toolbar",
    "comment": " Functions to present AUI toolbars.\n\n# Presentation\n\n@docs toolbar, toolbarPrimary, toolbarSecondary, toolbarGroup\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "toolbar",
        "comment": " Create a toolbar:\n\n    toolbar\n        [ toolbarPrimary\n            [ buttonGroup [ button baseConfig Edit [ text \"Edit\" ] ]\n            , buttonGroup\n                [ button baseConfig Assign [ text \"Assign\" ]\n                , button baseConfig AssignMe [ text \"Assign to me\" ]\n                ]\n            ]\n        , toolbarSecondary [ button baseConfig Configure [ icon Small Configure ] ]\n        ]\n",
        "type": "List (Html.Html a) -> Html.Html a"
      },
      {
        "name": "toolbarGroup",
        "comment": " Create toolbar button group\n",
        "type": "List (Html.Html a) -> Html.Html a"
      },
      {
        "name": "toolbarPrimary",
        "comment": " Create primary part of toolbar.\n",
        "type": "List (Html.Html a) -> Html.Html a"
      },
      {
        "name": "toolbarSecondary",
        "comment": " Create secondary part of toolbar.\n",
        "type": "List (Html.Html a) -> Html.Html a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Toggle",
    "comment": " Functions to present AUI toggle.\n\n# Presentation\n\n@docs toggle\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "toggle",
        "comment": " Create a toggle with if it is enabled, a message and its state.\n\n    toggle isEnabled\n        ToggleClicked\n        isOn\n",
        "type": "Bool -> (Bool -> a) -> Bool -> Html.Html a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Tabs",
    "comment": " Functions to present AUI tabs.\n\n# Types\n\n@docs Msg, Config, Item\n\n# Model\n\n@docs Model, modelWithActive\n\n# Update\n\n@docs update\n\n# Presentation\n\n@docs tabs\n\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configuration record to show a tabs component.\n",
        "args": [
          "a",
          "itemId"
        ],
        "type": "{ horizontal : Bool , items : List (Aui.Tabs.Item itemId) , msgMap : Aui.Tabs.Msg itemId -> a }"
      },
      {
        "name": "Item",
        "comment": " Representation of a single tab.\n",
        "args": [
          "itemId"
        ],
        "type": "{ id : itemId, name : String }"
      },
      {
        "name": "Model",
        "comment": " Model for the tabs component.\n",
        "args": [
          "itemId"
        ],
        "type": "Maybe.Maybe itemId"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " Messages being sent by the tabs component\n",
        "args": [
          "itemId"
        ],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "modelWithActive",
        "comment": " Create a model with a active item\n",
        "type": "itemId -> Aui.Tabs.Model itemId"
      },
      {
        "name": "tabs",
        "comment": " Create a tabs component with a given configuration, a mapper from itemId to tab content and a model\n",
        "type": "Aui.Tabs.Config a itemId -> (itemId -> Html.Html a) -> Aui.Tabs.Model itemId -> Html.Html a"
      },
      {
        "name": "update",
        "comment": " Update function for the tabs component. This should be called from within your update function when handling `Msg`.\n",
        "type": "Aui.Tabs.Msg itemId -> Aui.Tabs.Model itemId -> Aui.Tabs.Model itemId"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.ProgressIndicator",
    "comment": " Functions to present AUI progress indicator.\n\n\n# Presentation\n\n@docs progressIndicator, activeProgressIndicator\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "activeProgressIndicator",
        "comment": " Create a progress indicator that represents an active loading state.\n",
        "type": "Html.Html a"
      },
      {
        "name": "progressIndicator",
        "comment": " Create a progress indicator with a value between 0.0 and 1.0.\n",
        "type": "Float -> Html.Html a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.ProgressTracker",
    "comment": " Functions to present AUI progress tracker.\n\n\n# Presentation\n\n@docs progressTracker, invertedProgressTracker\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "invertedProgressTracker",
        "comment": " Create an inverted progress tracker with items and a given active index.\n",
        "type": "List String -> Int -> Html.Html a"
      },
      {
        "name": "progressTracker",
        "comment": " Create a progress tracker with items and a given active index (zero based).\n\n    progressTracker [\"Step 1\", \"Step 2\", \"Step 3\"] 1\n",
        "type": "List String -> Int -> Html.Html a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Messages",
    "comment": " Functions to present AUI messages.\n\n\n# Types\n\n@docs Type\n\n# Presentation\n\n@docs message, closableMessage\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Type",
        "comment": " Different message types\n",
        "args": [],
        "cases": [
          [
            "Generic",
            []
          ],
          [
            "Error",
            []
          ],
          [
            "Warning",
            []
          ],
          [
            "Success",
            []
          ],
          [
            "Info",
            []
          ],
          [
            "Hint",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "closableMessage",
        "comment": " Create a message dialog that has a close button and triggers a message.\n\n    closableMessage Warning\n        Closed\n        [ text \"Title\" ]\n        [ text \"There is a warning\" ]\n",
        "type": "Aui.Messages.Type -> a -> List (Html.Html a) -> List (Html.Html a) -> Html.Html a"
      },
      {
        "name": "message",
        "comment": " Create a message.\n\n    message Warning\n        [ text \"Title\" ]\n        [ text \"There is a warning\" ]\n",
        "type": "Aui.Messages.Type -> List (Html.Html a) -> List (Html.Html a) -> Html.Html a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Labels",
    "comment": " Functions to present AUI labels.\n\n\n# Types\n\n@docs Action, Config\n\n# Presentation\n\n@docs label\n\n# Utility\n\n@docs baseConfig, withNavigate, onClick, onRemove\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configuration to present a label.\n",
        "args": [
          "a"
        ],
        "type": "{ onRemove : Maybe.Maybe a , onClick : Maybe.Maybe (Aui.Labels.Action a) }"
      }
    ],
    "types": [
      {
        "name": "Action",
        "comment": " Actions that can be bound to a label\n",
        "args": [
          "a"
        ],
        "cases": [
          [
            "Navigate",
            [
              "String"
            ]
          ],
          [
            "Trigger",
            [
              "a"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "baseConfig",
        "comment": " Base configuration to show a label. No actions are bound by default.\n",
        "type": "Aui.Labels.Config a"
      },
      {
        "name": "label",
        "comment": " Show a label with a given configuration and content .\n\n    label (baseConfig\n            |> withNavigate \"http://elm-lang.org/\"\n            |> withRemove RemovedLabel)\n        [ text \"Please remove or click me!\" ]\n",
        "type": "Aui.Labels.Config a -> List (Html.Html a) -> Html.Html a"
      },
      {
        "name": "onClick",
        "comment": " Allow navigation to a given link by clicking the label text.\n",
        "type": "a -> Aui.Labels.Config a -> Aui.Labels.Config a"
      },
      {
        "name": "onRemove",
        "comment": " Allow the label to be removed triggering the given message.\n",
        "type": "a -> Aui.Labels.Config a -> Aui.Labels.Config a"
      },
      {
        "name": "withNavigate",
        "comment": " Allow navigation to a given link by clicking the label text.\n",
        "type": "String -> Aui.Labels.Config a -> Aui.Labels.Config a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Lozenge",
    "comment": " Functions to present AUI lozenges.\n\n\n# Types\n\n@docs Type, Presense\n\n# Presentation\n\n@docs lozenge\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Presense",
        "comment": " Presense style for a lozenge\n",
        "args": [],
        "cases": [
          [
            "Normal",
            []
          ],
          [
            "Subtle",
            []
          ]
        ]
      },
      {
        "name": "Type",
        "comment": " Types for a lozenge\n",
        "args": [],
        "cases": [
          [
            "Generic",
            []
          ],
          [
            "Success",
            []
          ],
          [
            "Error",
            []
          ],
          [
            "Current",
            []
          ],
          [
            "Complete",
            []
          ],
          [
            "Moved",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "lozenge",
        "comment": " Create a lozenge with presense and type\n",
        "type": "Aui.Lozenge.Presense -> Aui.Lozenge.Type -> List (Html.Html a) -> Html.Html a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Icons",
    "comment": " Functions to present AUI icons.\n\n\n# Types\n\n@docs Icon, Size\n\n# Presentation\n\n@docs icon, iconSmall, iconLarge\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Icon",
        "comment": " Available icon types. See official configuration for icon names. For all icon names the following convention is applied: from `add-comment` to `AddComment`\n",
        "args": [],
        "cases": [
          [
            "Add",
            []
          ],
          [
            "AddComment",
            []
          ],
          [
            "AddSmall",
            []
          ],
          [
            "Approve",
            []
          ],
          [
            "Appswitcher",
            []
          ],
          [
            "ArrowsDown",
            []
          ],
          [
            "ArrowsLeft",
            []
          ],
          [
            "ArrowsRight",
            []
          ],
          [
            "ArrowsUp",
            []
          ],
          [
            "Attachment",
            []
          ],
          [
            "AttachmentSmall",
            []
          ],
          [
            "AutocompleteDate",
            []
          ],
          [
            "BackPage",
            []
          ],
          [
            "Blogroll",
            []
          ],
          [
            "BpDecisions",
            []
          ],
          [
            "BpDefault",
            []
          ],
          [
            "BpFiles",
            []
          ],
          [
            "BpRequirements",
            []
          ],
          [
            "BpHowto",
            []
          ],
          [
            "BpJira",
            []
          ],
          [
            "BpMeeting",
            []
          ],
          [
            "BpRetrospective",
            []
          ],
          [
            "BpSharedlinks",
            []
          ],
          [
            "BpTroubleshooting",
            []
          ],
          [
            "Build",
            []
          ],
          [
            "Calendar",
            []
          ],
          [
            "CloseDialog",
            []
          ],
          [
            "Collapsed",
            []
          ],
          [
            "Comment",
            []
          ],
          [
            "Configure",
            []
          ],
          [
            "Confluence",
            []
          ],
          [
            "CopyClipboard",
            []
          ],
          [
            "CustomBullet",
            []
          ],
          [
            "Delete",
            []
          ],
          [
            "Deploy",
            []
          ],
          [
            "Details",
            []
          ],
          [
            "Doc",
            []
          ],
          [
            "Down",
            []
          ],
          [
            "DragVertical",
            []
          ],
          [
            "Edit",
            []
          ],
          [
            "EditSmall",
            []
          ],
          [
            "Email",
            []
          ],
          [
            "Error",
            []
          ],
          [
            "Expanded",
            []
          ],
          [
            "FileCode",
            []
          ],
          [
            "FileDoc",
            []
          ],
          [
            "FileJava",
            []
          ],
          [
            "FilePdf",
            []
          ],
          [
            "FilePpt",
            []
          ],
          [
            "FileTxt",
            []
          ],
          [
            "FileWav",
            []
          ],
          [
            "FileXls",
            []
          ],
          [
            "FileZip",
            []
          ],
          [
            "Flag",
            []
          ],
          [
            "Focus",
            []
          ],
          [
            "Group",
            []
          ],
          [
            "HandleHorizontal",
            []
          ],
          [
            "Help",
            []
          ],
          [
            "Hipchat",
            []
          ],
          [
            "Homepage",
            []
          ],
          [
            "Image",
            []
          ],
          [
            "ImageExtrasmall",
            []
          ],
          [
            "ImageSmall",
            []
          ],
          [
            "Info",
            []
          ],
          [
            "Like",
            []
          ],
          [
            "LikeSmall",
            []
          ],
          [
            "Weblink",
            []
          ],
          [
            "Link",
            []
          ],
          [
            "ListAdd",
            []
          ],
          [
            "ListRemove",
            []
          ],
          [
            "Locked",
            []
          ],
          [
            "LockedSmall",
            []
          ],
          [
            "MacroCode",
            []
          ],
          [
            "MacroDefault",
            []
          ],
          [
            "MacroGallery",
            []
          ],
          [
            "MacroStatus",
            []
          ],
          [
            "More",
            []
          ],
          [
            "NavChildren",
            []
          ],
          [
            "PageBlank",
            []
          ],
          [
            "PageBlogpost",
            []
          ],
          [
            "PageDefault",
            []
          ],
          [
            "PageTemplate",
            []
          ],
          [
            "Pages",
            []
          ],
          [
            "Quote",
            []
          ],
          [
            "Redo",
            []
          ],
          [
            "Remove",
            []
          ],
          [
            "RemoveLabel",
            []
          ],
          [
            "Review",
            []
          ],
          [
            "Rss",
            []
          ],
          [
            "Search",
            []
          ],
          [
            "SearchSmall",
            []
          ],
          [
            "Share",
            []
          ],
          [
            "SidebarLink",
            []
          ],
          [
            "Sourcetree",
            []
          ],
          [
            "SpaceDefault",
            []
          ],
          [
            "SpacePersonal",
            []
          ],
          [
            "Star",
            []
          ],
          [
            "Success",
            []
          ],
          [
            "TableBg",
            []
          ],
          [
            "TableColLeft",
            []
          ],
          [
            "TableColRemove",
            []
          ],
          [
            "TableColRight",
            []
          ],
          [
            "TableCopyRow",
            []
          ],
          [
            "TableCutRow",
            []
          ],
          [
            "TableHeaderColumn",
            []
          ],
          [
            "TableHeaderRow",
            []
          ],
          [
            "TableMerge",
            []
          ],
          [
            "TableNoBg",
            []
          ],
          [
            "TablePasteRow",
            []
          ],
          [
            "TableRemove",
            []
          ],
          [
            "TableRowDown",
            []
          ],
          [
            "TableRowRemove",
            []
          ],
          [
            "TableRowUp",
            []
          ],
          [
            "TableSplit",
            []
          ],
          [
            "Teamcals",
            []
          ],
          [
            "Time",
            []
          ],
          [
            "Undo",
            []
          ],
          [
            "Unfocus",
            []
          ],
          [
            "Unlocked",
            []
          ],
          [
            "Unstar",
            []
          ],
          [
            "Unwatch",
            []
          ],
          [
            "Up",
            []
          ],
          [
            "User",
            []
          ],
          [
            "UserStatus",
            []
          ],
          [
            "View",
            []
          ],
          [
            "ViewCard",
            []
          ],
          [
            "ViewList",
            []
          ],
          [
            "ViewTable",
            []
          ],
          [
            "Warning",
            []
          ],
          [
            "Watch",
            []
          ],
          [
            "Workbox",
            []
          ],
          [
            "WorkboxEmpty",
            []
          ],
          [
            "ConfigureColumns",
            []
          ],
          [
            "Export",
            []
          ],
          [
            "ExportList",
            []
          ],
          [
            "FileImage",
            []
          ],
          [
            "AdminFusion",
            []
          ],
          [
            "AdminJiraFields",
            []
          ],
          [
            "AdminIssue",
            []
          ],
          [
            "AdminNotifications",
            []
          ],
          [
            "AdminRoles",
            []
          ],
          [
            "AdminJiraScreens",
            []
          ],
          [
            "Pause",
            []
          ],
          [
            "PriorityHighest",
            []
          ],
          [
            "PriorityHigh",
            []
          ],
          [
            "PriorityMedium",
            []
          ],
          [
            "PriorityLow",
            []
          ],
          [
            "PriorityLowest",
            []
          ],
          [
            "RefreshSmall",
            []
          ],
          [
            "ShareList",
            []
          ],
          [
            "SwitchSmall",
            []
          ],
          [
            "Version",
            []
          ],
          [
            "Workflow",
            []
          ],
          [
            "AdminJiraSettings",
            []
          ],
          [
            "Component",
            []
          ],
          [
            "Reopen",
            []
          ],
          [
            "Roadmap",
            []
          ],
          [
            "DeploySuccess",
            []
          ],
          [
            "DeployFail",
            []
          ],
          [
            "FileGeneric",
            []
          ],
          [
            "ArrowDown",
            []
          ],
          [
            "ArrowUp",
            []
          ],
          [
            "FileVideo",
            []
          ],
          [
            "BlogrollLarge",
            []
          ],
          [
            "EmailLarge",
            []
          ],
          [
            "Layout1colLarge",
            []
          ],
          [
            "Layout2colLarge",
            []
          ],
          [
            "Layout2colLeftLarge",
            []
          ],
          [
            "Layout2colRightLarge",
            []
          ],
          [
            "Layout3colCenterLarge",
            []
          ],
          [
            "Layout3colLarge",
            []
          ],
          [
            "NavChildrenLarge",
            []
          ],
          [
            "PagesLarge",
            []
          ],
          [
            "SidebarLinkLarge",
            []
          ],
          [
            "TeamcalsLarge",
            []
          ],
          [
            "UserLarge",
            []
          ],
          [
            "JiraIssues",
            []
          ],
          [
            "DevtoolsArrowLeft",
            []
          ],
          [
            "DevtoolsArrowRight",
            []
          ],
          [
            "DevtoolsBranch",
            []
          ],
          [
            "DevtoolsBranchSmall",
            []
          ],
          [
            "DevtoolsBrowseUp",
            []
          ],
          [
            "DevtoolsCheckout",
            []
          ],
          [
            "DevtoolsClone",
            []
          ],
          [
            "DevtoolsCommit",
            []
          ],
          [
            "DevtoolsCompare",
            []
          ],
          [
            "DevtoolsFile",
            []
          ],
          [
            "DevtoolsFileBinary",
            []
          ],
          [
            "DevtoolsFileCommented",
            []
          ],
          [
            "DevtoolsFolderClosed",
            []
          ],
          [
            "DevtoolsFolderOpen",
            []
          ],
          [
            "DevtoolsFork",
            []
          ],
          [
            "DevtoolsPullRequest",
            []
          ],
          [
            "DevtoolsRepository",
            []
          ],
          [
            "DevtoolsRepositoryForked",
            []
          ],
          [
            "DevtoolsRepositoryLocked",
            []
          ],
          [
            "DevtoolsSideDiff",
            []
          ],
          [
            "DevtoolsSubmodule",
            []
          ],
          [
            "DevtoolsTag",
            []
          ],
          [
            "DevtoolsTagSmall",
            []
          ],
          [
            "DevtoolsTaskCancelled",
            []
          ],
          [
            "DevtoolsTaskDisabled",
            []
          ],
          [
            "DevtoolsTaskInProgress",
            []
          ],
          [
            "Bitbucket",
            []
          ],
          [
            "EditorAlignCenter",
            []
          ],
          [
            "EditorAlignLeft",
            []
          ],
          [
            "EditorAlignRight",
            []
          ],
          [
            "EditorBold",
            []
          ],
          [
            "EditorColor",
            []
          ],
          [
            "EditorEmoticon",
            []
          ],
          [
            "EditorHelp",
            []
          ],
          [
            "EditorHr",
            []
          ],
          [
            "EditorIndent",
            []
          ],
          [
            "EditorItalic",
            []
          ],
          [
            "EditorLayout",
            []
          ],
          [
            "EditorListBullet",
            []
          ],
          [
            "EditorListNumber",
            []
          ],
          [
            "EditorMacroToc",
            []
          ],
          [
            "EditorMention",
            []
          ],
          [
            "EditorOutdent",
            []
          ],
          [
            "EditorStyles",
            []
          ],
          [
            "EditorSymbol",
            []
          ],
          [
            "EditorTable",
            []
          ],
          [
            "EditorTask",
            []
          ],
          [
            "EditorUnderline",
            []
          ],
          [
            "Jira",
            []
          ],
          [
            "JiraCompletedTask",
            []
          ],
          [
            "JiraTestSession",
            []
          ]
        ]
      },
      {
        "name": "Size",
        "comment": " Sizes for icon\n",
        "args": [],
        "cases": [
          [
            "Large",
            []
          ],
          [
            "Small",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "icon",
        "comment": " Create an icon with a given size and type.\n\n    icon Small Configure\n",
        "type": "Aui.Icons.Size -> Aui.Icons.Icon -> Html.Html a"
      },
      {
        "name": "iconLarge",
        "comment": " Shortcut for `icon Large`\n",
        "type": "Aui.Icons.Icon -> Html.Html a"
      },
      {
        "name": "iconSmall",
        "comment": " Shortcut for `icon Small`\n",
        "type": "Aui.Icons.Icon -> Html.Html a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Buttons",
    "comment": " Functions to present AUI buttons and groups.\n\n\n# Types\n\n@docs Style, Config\n\n# Presentation\n\n@docs button, buttonGroup\n\n# Utility\n\n@docs baseConfig, disable, withStyle, withHref, withActive, withAdditionalClass, forceAnchor\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configuration record for presenting a button.\n",
        "args": [],
        "type": "{ style : Aui.Buttons.Style , forceAnchor : Bool , disabled : Bool , href : Maybe.Maybe String , active : Bool , additionalClass : Maybe.Maybe String }"
      }
    ],
    "types": [
      {
        "name": "Style",
        "comment": " Different styles available for a button.\n",
        "args": [],
        "cases": [
          [
            "Normal",
            []
          ],
          [
            "Primary",
            []
          ],
          [
            "Subtle",
            []
          ],
          [
            "Light",
            []
          ],
          [
            "Link",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "baseConfig",
        "comment": " A configuration with sane defaults (no style, no anchor, enable, ect.).\n",
        "type": "Aui.Buttons.Config"
      },
      {
        "name": "button",
        "comment": " Render an AUI button.\n\n    button (baseConfig |> withStyle Primary |> withHref \"http://elm-lang.org/\")\n        ButtonClicked\n        [ text \"Click me!\"]\n",
        "type": "Aui.Buttons.Config -> a -> List (Html.Html a) -> Html.Html a"
      },
      {
        "name": "buttonGroup",
        "comment": " Button container that will add the correct classes to make a button group.\n\n    buttonGroup\n        [ button config Clicked1 [text \"First\"]\n        , button config Clicked2 [text \"Second\"]\n        , button config Clicked3 [text \"Third\"]\n        ]\n",
        "type": "List (Html.Html a) -> Html.Html a"
      },
      {
        "name": "disable",
        "comment": " Add the disabled state to a button.\n\n    baseConfig |> disable\n",
        "type": "Aui.Buttons.Config -> Aui.Buttons.Config"
      },
      {
        "name": "forceAnchor",
        "comment": " Forces the anchor tag to be used instead of the default button tag (only if no href is specified).\n\n    baseConfig |> forceAnchor\n",
        "type": "Aui.Buttons.Config -> Aui.Buttons.Config"
      },
      {
        "name": "withActive",
        "comment": " Make a button active or not active.\n\n    baseConfig |> withActive True\n",
        "type": "Bool -> Aui.Buttons.Config -> Aui.Buttons.Config"
      },
      {
        "name": "withAdditionalClass",
        "comment": " Add additional classes to the button\n\n    baseConfig |> additionalClass \"my-button\"\n",
        "type": "String -> Aui.Buttons.Config -> Aui.Buttons.Config"
      },
      {
        "name": "withHref",
        "comment": " Add a href to the buttons configuration.\n\n    baseConfig |> withHref \"http://elm-lang.org/\"\n",
        "type": "String -> Aui.Buttons.Config -> Aui.Buttons.Config"
      },
      {
        "name": "withStyle",
        "comment": " Add a button style to the configuration.\n\n    baseConfig |> withStyle Subtle\n",
        "type": "Aui.Buttons.Style -> Aui.Buttons.Config -> Aui.Buttons.Config"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Expander",
    "comment": " Functions to present AUI expander.\n\n\n# Types\n\n@docs Config\n\n# Model\n\n@docs Model, Msg, initialModel\n\n# Update\n\n@docs update\n\n# Presentation\n\n@docs expander\n\n# Utility\n\n@docs baseConfig\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configuration record for presenting an expander.\n",
        "args": [
          "a"
        ],
        "type": "{ moreText : String , lessText : String , msgMap : Aui.Expander.Msg -> a , minHeight : Maybe.Maybe String }"
      },
      {
        "name": "Model",
        "comment": " Model for the expander comonent.\n",
        "args": [],
        "type": "Bool"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " Messages being sent by the expander component.\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "baseConfig",
        "comment": " Create a default configuration with sane defaults to present an expander.\n",
        "type": "(Aui.Expander.Msg -> a) -> Aui.Expander.Config a"
      },
      {
        "name": "expander",
        "comment": " Present a expander given a configuration, content and model.\n\n    view model =\n        expander (baseConfig ExpanderMsg)\n            \"Lorem ipsum...\"\n            model.expander\n",
        "type": "Aui.Expander.Config a -> String -> Aui.Expander.Model -> Html.Html a"
      },
      {
        "name": "initialModel",
        "comment": " Default model for a expander component\n",
        "type": "Aui.Expander.Model"
      },
      {
        "name": "update",
        "comment": " Update function for the expander component. This should be called from within your update function when handling `Msg`\n",
        "type": "Aui.Expander.Msg -> Aui.Expander.Model -> Aui.Expander.Model"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Backdrop",
    "comment": " Functions to create a backdrop that is needed for several AUI Components.\n\n# Presentation\n\n@docs backdrop\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "backdrop",
        "comment": " Present a backdrop with a click handler.\n\n    backdrop 1000 ClickedBackdrop True\n",
        "type": "Int -> a -> Bool -> Html.Html a"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  },
  {
    "name": "Aui.Badges",
    "comment": " Functions to present AUI badges.\n\n\n# Presentation\n\n@docs badge\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "badge",
        "comment": " Present a badge with a given content\n\n    badge \"Hello world!\"\n",
        "type": "String -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.17.0"
  }
]