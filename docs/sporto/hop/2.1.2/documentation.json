[{"name":"Hop","comment":" A router for single page applications. See [readme](https://github.com/sporto/hop) for usage.\n\n# Types\n@docs Config, Router, Payload, Params, Query, Url, RouteDefinition, Action\n\n# Setup\n@docs new\n\n# Navigation\n@docs navigateTo, addQuery, removeQuery, setQuery, clearQuery\n","aliases":[{"name":"Config","comment":" Configuration input for Hop.new\n","args":["partialAction"],"type":"Hop.Types.Config partialAction"},{"name":"Params","comment":" A Dict that holds parameters for the current route\n\n    Dict.Dict String String\n","args":[],"type":"Hop.Types.Params"},{"name":"Payload","comment":" Payload returned by the router when calling routing actions\n","args":[],"type":"Hop.Types.Payload"},{"name":"Query","comment":" A Dict that holds query parameters\n\n    Dict.Dict String String\n","args":[],"type":"Hop.Types.Query"},{"name":"RouteDefinition","comment":" A route defintion\n","args":["action"],"type":"Hop.Types.RouteDefinition action"},{"name":"Router","comment":" Router record created by Hop.new\n","args":["action"],"type":"Hop.Types.Router action"},{"name":"Url","comment":" A Record that includes a `path` and `query`\n\n    {\n      path: List String,\n      query: Query\n    }\n","args":[],"type":"Hop.Types.Url"}],"types":[{"name":"Action","comment":" Actions\n","args":[],"cases":[]}],"values":[{"name":"addQuery","comment":" Add query string values (patches any existing values)\n\n    update action model =\n      case action of\n        ...\n        AddQuery query ->\n          (model, Effects.map HopAction (Hop.addQuery query model.routerPayload.url))\n\n  To remove a value set the value to \"\"\n","type":"Hop.Types.Query -> Hop.Types.Url -> Effects.Effects Hop.Action"},{"name":"clearQuery","comment":" Clear all query string values\n\n    update action model =\n      case action of\n        ...\n        ClearQuery ->\n          (model, Effects.map HopAction (Hop.clearQuery model.routerPayload.url))\n","type":"Hop.Types.Url -> Effects.Effects Hop.Action"},{"name":"navigateTo","comment":" Changes the location (hash and query)\n\n  NavigateTo will append \"#/\" if necessary\n\n    update action model =\n      case action of\n        ...\n        NavigateTo path ->\n          (model, Effects.map HopAction (Hop.navigateTo path))\n","type":"String -> Effects.Effects Hop.Action"},{"name":"new","comment":" Create a Hop.Router\n\n    router =\n      Hop.new {\n        routes = routes,\n        notFoundAction = ShowNotFound\n      }\n","type":"Hop.Config (Hop.UserPartialAction action) -> Hop.Router action"},{"name":"removeQuery","comment":" Remove one query string value\n\n    update action model =\n      case action of\n        ...\n        RemoveQuery query ->\n          (model, Effects.map HopAction (Hop.removeQuery key model.routerPayload.url))\n","type":"String -> Hop.Types.Url -> Effects.Effects Hop.Action"},{"name":"setQuery","comment":" Set query string values (removes existing values)\n\n    update action model =\n      case action of\n        ...\n        SetQuery query ->\n          (model, Effects.map HopAction (Hop.setQuery query model.routerPayload.url))\n","type":"Hop.Types.Query -> Hop.Types.Url -> Effects.Effects Hop.Action"}],"generated-with-elm-version":"0.16.0"}]