[
  {
    "name": "Http.Extra",
    "comment": " Extra helpers for more easily building Http requests that require greater\nconfiguration than what is provided by `elm-http` out of the box.\n\n\n# Start a request\n@docs RequestBuilder, url, get, post, put, patch, delete\n\n# Configure request properties\n@docs withHeader, withHeaders, withBody, withStringBody, withMultipartBody, withMultipartStringBody\n\n# Configure settings\n@docs withTimeout, withStartHandler, withProgressHandler, withMimeType, withCredentials\n\n# Send the request\n@docs send, Error\n\n# Inspect the request\n@docs toRequest, toSettings, Request, Settings\n",
    "aliases": [
      {
        "name": "Error",
        "comment": " Re-export `Http.Error`\n",
        "args": [],
        "type": "Http.Error"
      },
      {
        "name": "Request",
        "comment": " Re-export `Http.Request`\n",
        "args": [],
        "type": "Http.Request"
      },
      {
        "name": "Settings",
        "comment": " Re-export `Http.Settings`\n",
        "args": [],
        "type": "Http.Settings"
      }
    ],
    "types": [
      {
        "name": "RequestBuilder",
        "comment": " A type for chaining request configuration\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "delete",
        "comment": " Start building a DELETE request with a given URL\n\n    delete \"https://example.com/api/items/1\"\n",
        "type": "String -> Http.Extra.RequestBuilder"
      },
      {
        "name": "get",
        "comment": " Start building a GET request with a given URL\n\n    get \"https://example.com/api/items/1\"\n",
        "type": "String -> Http.Extra.RequestBuilder"
      },
      {
        "name": "patch",
        "comment": " Start building a PATCH request with a given URL\n\n    patch \"https://example.com/api/items/1\"\n",
        "type": "String -> Http.Extra.RequestBuilder"
      },
      {
        "name": "post",
        "comment": " Start building a POST request with a given URL\n\n    post \"https://example.com/api/items\"\n",
        "type": "String -> Http.Extra.RequestBuilder"
      },
      {
        "name": "put",
        "comment": " Start building a PUT request with a given URL\n\n    post \"https://example.com/api/items/1\"\n",
        "type": "String -> Http.Extra.RequestBuilder"
      },
      {
        "name": "send",
        "comment": " Once you're finished building up a request, send it with a given decoder\n\n    get \"https://example.com/api/items\"\n      |> withHeader (\"Content-Type\", \"application/json\")\n      |> withTimeout (10 * Time.second)\n      |> send (Json.Decoder.list Json.Decoder.string)\n",
        "type": "Json.Decode.Decoder a -> Http.Extra.RequestBuilder -> Task.Task Http.Extra.Error a"
      },
      {
        "name": "toRequest",
        "comment": " Extract the Http.Request component of the builder, for introspection and\ntesting\n",
        "type": "Http.Extra.RequestBuilder -> Http.Extra.Request"
      },
      {
        "name": "toSettings",
        "comment": " Extract the Http.Settings component of the builder, for introspection and\ntesting\n",
        "type": "Http.Extra.RequestBuilder -> Http.Extra.Settings"
      },
      {
        "name": "url",
        "comment": " Construct a url using String, String key value pairs for the query string.\nSee `Http.url`.\n\n    googleUrl =\n      url \"https://google.com\" [(\"q\", \"elm\")]\n",
        "type": "String -> List ( String, String ) -> String"
      },
      {
        "name": "withBody",
        "comment": " Add a body to a request for requests that allow bodies.\n\n    post \"https://example.com/api/items/1\"\n      |> withHeader (\"Content-Type\", \"application/json\")\n      |> withBody (Http.string \"\"\"{ \"sortBy\": \"coolness\", \"take\": 10 }\"\"\")\n",
        "type": "Http.Body -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withCredentials",
        "comment": " Set the `withCredentials` flag on the request to True. Works via\n[`XMLHttpRequest#withCredentials`](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials)\n\n    get \"https://example.com/api/items/1\"\n      |> withCredentials\n",
        "type": "Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withHeader",
        "comment": " Add a single header to a request\n\n    get \"https://example.com/api/items/1\"\n      |> withHeader (\"Content-Type\", \"application/json\")\n",
        "type": "( String, String ) -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withHeaders",
        "comment": " Add many headers to a request\n\n    get \"https://example.com/api/items/1\"\n      |> withHeaders [(\"Content-Type\", \"application/json\"), (\"Accept\", \"application/json\")]\n",
        "type": "List ( String, String ) -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withMimeType",
        "comment": " Set the desired type of the response for the request, works via\n[`XMLHttpRequest#overrideMimeType()`](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#overrideMimeType())\n\n    get \"https://example.com/api/items/1\"\n      |> withMimeType (onProgressHandler)\n",
        "type": "String -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withMultipartBody",
        "comment": " Convenience function for adding a multiplart body to a request\n\n      post \"https://example.com/api/items/1\"\n        |> withMultipartBody [Http.stringData \"user\" (JS.encode user)]\n",
        "type": "List Http.Data -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withMultipartStringBody",
        "comment": " Convience function for adding multipart bodies composed of String, String\nkey-value pairs. Since `Http.stringData` is currently the only `Http.Data`\ncreator having this function removes the need to use the `Http.Data` type in\nyour type signatures.\n\n    post \"https://example.com/api/items/1\"\n      |> withMultipartStringBody [(\"user\", JS.encode user)]\n",
        "type": "List ( String, String ) -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withProgressHandler",
        "comment": " Set the `onProgress` setting on the request\n\n    get \"https://example.com/api/items/1\"\n      |> withProgressHandler (onProgressHandler)\n",
        "type": "(Maybe.Maybe { loaded : Int, total : Int } -> Task.Task () ()) -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withStartHandler",
        "comment": " Set the `onStart` setting on the request\n\n    get \"https://example.com/api/items/1\"\n      |> withStartHandler (onStartTask)\n",
        "type": "Task.Task () () -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withStringBody",
        "comment": " Convenience function for adding a string body to a request\n\n    post \"https://example.com/api/items/1\"\n      |> withHeader (\"Content-Type\", \"application/json\")\n      |> withStringBody \"\"\"{ \"sortBy\": \"coolness\", \"take\": 10 }\"\"\"\n",
        "type": "String -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      },
      {
        "name": "withTimeout",
        "comment": " Set the `timeout` setting on the request\n\n    get \"https://example.com/api/items/1\"\n      |> withTimeout (10 * Time.second)\n",
        "type": "Time.Time -> Http.Extra.RequestBuilder -> Http.Extra.RequestBuilder"
      }
    ],
    "generated-with-elm-version": "0.16.0"
  }
]