[{"name":"Input.Text","comment":" Text input\n\n# Model\n@docs Model, init\n\n# View\n@docs input, Options, defaultOptions\n\n# Update\n@docs update\n\n# Msg\n@docs Msg\n","aliases":[{"name":"Model","comment":" (TEA) Model record\nFields:\n * `value` : current value of the input element.\n * `hasFocus` : flag whether the input element has focus or not.\n","args":[],"type":"{ value : String, hasFocus : Bool }"},{"name":"Options","comment":" Options of the input component.\n\n * `id` is the id of the HTML element.\n * `maxLength` is the maximum number of character allowed in this input. Set to `Nothing` for no limit.\n * `maxValue` is the maximum number value allowed in this input. Set to `Nothing` for no limit.\n * `minValue` is the minimum number value allowed in this input. Set to `Nothing` for no limit.\n","args":[],"type":"{ id : String, maxLength : Maybe.Maybe Int }"}],"types":[{"name":"Msg","comment":" (TEA) Opaque Msg types\n","args":[],"cases":[]}],"values":[{"name":"defaultOptions","comment":" Default value for `Options`.\nParams:\n * `id` (type: `String`) : The `id` of the number input element.\n","type":"String -> Input.Text.Options"},{"name":"init","comment":" (TEA) Initial model constant\n","type":"Input.Text.Model"},{"name":"input","comment":" (TEA) View function\n","type":"Input.Text.Options -> List (Html.Attribute Input.Text.Msg) -> Input.Text.Model -> Html.Html Input.Text.Msg"},{"name":"update","comment":" (TEA) Update function\n","type":"Input.Text.Msg -> Input.Text.Model -> Input.Text.Model"}],"generated-with-elm-version":"0.17.0"},{"name":"Input.Number","comment":" Number input\n\n# Model\n@docs Model, init\n\n# View\n@docs input, Options, defaultOptions\n\n# Update\n@docs update\n\n# Msg\n@docs Msg\n","aliases":[{"name":"Model","comment":" (TEA) Model record\nFields:\n * `value` : current value of the input element.\n * `hasFocus` : flag whether the input element has focus or not.\n","args":[],"type":"{ value : String, hasFocus : Bool }"},{"name":"Options","comment":" Options of the input component.\n\n * `id` is the id of the HTML element.\n * `maxLength` is the maximum number of character allowed in this input. Set to `Nothing` for no limit.\n * `maxValue` is the maximum number value allowed in this input. Set to `Nothing` for no limit.\n * `minValue` is the minimum number value allowed in this input. Set to `Nothing` for no limit.\n","args":[],"type":"{ id : String , maxLength : Maybe.Maybe Int , maxValue : Maybe.Maybe Int , minValue : Maybe.Maybe Int }"}],"types":[{"name":"Msg","comment":" (TEA) Opaque Msg types\n","args":[],"cases":[]}],"values":[{"name":"defaultOptions","comment":" Default value for `Options`.\nParams:\n * `id` (type: `String`) : The `id` of the number input element.\n","type":"String -> Input.Number.Options"},{"name":"init","comment":" (TEA) Initial model constant\n","type":"Input.Number.Model"},{"name":"input","comment":" (TEA) View function\n","type":"Input.Number.Options -> List (Html.Attribute Input.Number.Msg) -> Input.Number.Model -> Html.Html Input.Number.Msg"},{"name":"update","comment":" (TEA) Update function\n","type":"Input.Number.Msg -> Input.Number.Model -> Input.Number.Model"}],"generated-with-elm-version":"0.17.0"}]