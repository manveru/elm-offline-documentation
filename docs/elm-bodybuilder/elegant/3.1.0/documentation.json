[
  {
    "name": "Elegant.Button",
    "comment": "\n@docs btnStyle\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "btnStyle",
        "comment": " Create a nice looking button\n",
        "type": "( Elegant.SizeUnit, Elegant.SizeUnit ) -> List (Elegant.Style -> Elegant.Style)"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Elegant.Grid",
    "comment": "\n@docs col\n@docs fullGrid\n@docs grid\n@docs standardGrid\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "col",
        "comment": " Creates a column\n",
        "type": "Int -> Int -> List (Html.Html msg) -> Elegant.Grid.Column msg"
      },
      {
        "name": "fullGrid",
        "comment": " Full grid creates a grid with no gutter\n",
        "type": "List (Elegant.Grid.Column msg) -> Html.Html msg"
      },
      {
        "name": "grid",
        "comment": " Creates a grid with a custom gutter and columns\n",
        "type": "Elegant.SizeUnit -> List (Elegant.Grid.Column msg) -> Html.Html msg"
      },
      {
        "name": "standardGrid",
        "comment": " Standard grid creates a grid with a 12px gutter\n",
        "type": "List (Elegant.Grid.Column msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Elegant.Elements",
    "comment": "\n@docs border\n@docs flexnav\n@docs borderBottom\n@docs link\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "border",
        "comment": " Create a solid border with 1px of width and the color is a parameter\n",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderBottom",
        "comment": " Create a solid border bottom with 1px of width and the color is a parameter\n",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "flexnav",
        "comment": " Create a flex navigation\n",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "link",
        "comment": " Create a nice looking Link\n",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Elegant",
    "comment": "\n\n\n# Types\n\n@docs Vector\n@docs Style\n@docs SizeUnit\n@docs BoxShadow\n@docs Offset\n\n# Styling\n@docs style\n\n# Styles\n## Positions\n@docs positionStatic\n@docs positionAbsolute\n@docs positionRelative\n@docs positionFixed\n@docs left\n@docs right\n@docs top\n@docs bottom\n@docs absolutelyPositionned\n@docs verticalAlignMiddle\n\n## Align Items\n@docs alignItemsBaseline\n@docs alignItemsCenter\n@docs alignItemsFlexStart\n@docs alignItemsFlexEnd\n@docs alignItemsInherit\n@docs alignItemsInitial\n@docs alignItemsStretch\n@docs alignSelfCenter\n\n## SizeUnit operations\n@docs opposite\n\n## Paddings\n@docs padding\n@docs paddingHorizontal\n@docs paddingVertical\n@docs paddingLeft\n@docs paddingRight\n@docs paddingTop\n@docs paddingBottom\n\n## Margins\n@docs margin\n@docs marginAuto\n@docs marginHorizontal\n@docs marginVertical\n@docs marginTop\n@docs marginBottom\n@docs marginLeft\n@docs marginRight\n\n## Text Attributes\n@docs textColor\n@docs uppercase\n@docs lowercase\n@docs capitalize\n@docs textDecorationNone\n@docs underline\n@docs lineThrough\n@docs bold\n@docs strong\n@docs lineHeight\n@docs fontWeightNormal\n@docs fontStyleNormal\n@docs fontStyleItalic\n@docs fontSize\n@docs cursorPointer\n@docs lineHeightNormal\n@docs whiteSpaceNoWrap\n\n## Text Alignements\n@docs textCenter\n@docs textLeft\n@docs textRight\n@docs textJustify\n@docs backgroundColor\n\n## Border\n@docs borderColor\n@docs borderSolid\n@docs borderDashed\n@docs borderWidth\n@docs borderBottomColor\n@docs borderBottomWidth\n@docs borderBottomSolid\n@docs borderBottomDashed\n@docs borderLeftColor\n@docs borderLeftWidth\n@docs borderLeftSolid\n@docs borderLeftDashed\n@docs borderTopColor\n@docs borderTopWidth\n@docs borderTopSolid\n@docs borderTopDashed\n@docs borderRightColor\n@docs borderRightWidth\n@docs borderRightSolid\n@docs borderRightDashed\n@docs borderBottomLeftRadius\n@docs borderBottomRightRadius\n@docs borderTopLeftRadius\n@docs borderTopRightRadius\n@docs borderRadius\n@docs borderAndTextColor\n@docs boxShadow\n@docs boxShadowPlain\n@docs boxShadowBlurry\n@docs boxShadowCenteredBlurry\n\n## Display\n@docs displayBlock\n@docs displayInlineBlock\n@docs displayFlex\n@docs displayInlineFlex\n@docs displayInline\n@docs displayNone\n\n## Flex Attributes\n@docs flex\n@docs flexWrapWrap\n@docs flexWrapNoWrap\n@docs flexBasis\n@docs flexGrow\n@docs flexShrink\n@docs flexDirectionColumn\n\n## Opacity\n@docs opacity\n\n## Overflow\n@docs overflowAuto\n@docs overflowHidden\n@docs overflowScroll\n@docs overflowVisible\n\n## List Style Type\n@docs listStyleNone\n@docs listStyleDisc\n@docs listStyleCircle\n@docs listStyleSquare\n@docs listStyleDecimal\n@docs listStyleGeorgian\n\n## Round\n@docs roundCorner\n@docs round\n\n\n## Justify Content\n\n@docs justifyContentSpaceBetween\n@docs justifyContentSpaceAround\n@docs justifyContentCenter\n\n## Spacings\n@docs spaceBetween\n@docs spaceAround\n@docs fontInherit\n\n## Width and Height\n@docs width\n@docs widthPercent\n@docs maxWidth\n@docs minWidth\n@docs height\n@docs heightPercent\n@docs maxHeight\n@docs minHeight\n@docs fullWidth\n\n## Z-Index\n@docs zIndex\n\n## Visibility\n@docs visibilityHidden\n\n\n# Constants\n\n## Sizes\n@docs huge\n@docs large\n@docs medium\n@docs small\n@docs tiny\n@docs zero\n\n## Color\n@docs transparent\n\n## Font Sizes\n@docs alpha\n@docs beta\n@docs gamma\n@docs delta\n@docs epsilon\n@docs zeta\n@docs eta\n@docs theta\n@docs iota\n@docs kappa\n\n",
    "aliases": [
      {
        "name": "BoxShadow",
        "comment": " BoxShadow type\n",
        "args": [],
        "type": "{ inset : Bool , spreadRadius : Maybe.Maybe Elegant.SizeUnit , blurRadius : Maybe.Maybe Elegant.SizeUnit , color : Maybe.Maybe Color.Color , offset : Elegant.Offset }"
      },
      {
        "name": "Offset",
        "comment": " Offset type\n",
        "args": [],
        "type": "( Elegant.SizeUnit, Elegant.SizeUnit )"
      },
      {
        "name": "Vector",
        "comment": " ",
        "args": [],
        "type": "( Float, Float )"
      }
    ],
    "types": [
      {
        "name": "SizeUnit",
        "comment": " ",
        "args": [],
        "cases": [
          [
            "Px",
            [
              "Int"
            ]
          ],
          [
            "Pt",
            [
              "Int"
            ]
          ],
          [
            "Percent",
            [
              "Float"
            ]
          ],
          [
            "Vh",
            [
              "Float"
            ]
          ],
          [
            "Em",
            [
              "Float"
            ]
          ],
          [
            "Rem",
            [
              "Float"
            ]
          ]
        ]
      },
      {
        "name": "Style",
        "comment": " Contains all style for an element used with Elegant.\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "absolutelyPositionned",
        "comment": " ",
        "type": "Elegant.Vector -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "alignItemsBaseline",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "alignItemsCenter",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "alignItemsFlexEnd",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "alignItemsFlexStart",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "alignItemsInherit",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "alignItemsInitial",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "alignItemsStretch",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "alignSelfCenter",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "alpha",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "backgroundColor",
        "comment": " ",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "beta",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "bold",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderAndTextColor",
        "comment": " Set both text and border in same color.\n",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderBottomColor",
        "comment": " ",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderBottomDashed",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderBottomLeftRadius",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderBottomRightRadius",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderBottomSolid",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderBottomWidth",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderColor",
        "comment": " ",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderDashed",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderLeftColor",
        "comment": " ",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderLeftDashed",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderLeftSolid",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderLeftWidth",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderRadius",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderRightColor",
        "comment": " ",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderRightDashed",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderRightSolid",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderRightWidth",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderSolid",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderTopColor",
        "comment": " ",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderTopDashed",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderTopLeftRadius",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderTopRightRadius",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderTopSolid",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderTopWidth",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "borderWidth",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "bottom",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "boxShadow",
        "comment": " Set the box shadow\n",
        "type": "Elegant.BoxShadow -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "boxShadowBlurry",
        "comment": " Create a blurry box shadow\n",
        "type": "Elegant.Offset -> Elegant.SizeUnit -> Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "boxShadowCenteredBlurry",
        "comment": " Create a centered blurry box shadow\n",
        "type": "Elegant.SizeUnit -> Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "boxShadowPlain",
        "comment": " Create a plain box shadow\n",
        "type": "Elegant.Offset -> Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "capitalize",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "cursorPointer",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "delta",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "displayBlock",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "displayFlex",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "displayInline",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "displayInlineBlock",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "displayInlineFlex",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "displayNone",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "epsilon",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "eta",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "flex",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "flexBasis",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "flexDirectionColumn",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "flexGrow",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "flexShrink",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "flexWrapNoWrap",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "flexWrapWrap",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "fontInherit",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "fontSize",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "fontStyleItalic",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "fontStyleNormal",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "fontWeightNormal",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "fullWidth",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "gamma",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "height",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "heightPercent",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "huge",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "iota",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "justifyContentCenter",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "justifyContentSpaceAround",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "justifyContentSpaceBetween",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "kappa",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "large",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "left",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "lineHeight",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "lineHeightNormal",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "lineThrough",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "listStyleCircle",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "listStyleDecimal",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "listStyleDisc",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "listStyleGeorgian",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "listStyleNone",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "listStyleSquare",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "lowercase",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "margin",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "marginAuto",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "marginBottom",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "marginHorizontal",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "marginLeft",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "marginRight",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "marginTop",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "marginVertical",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "maxHeight",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "maxWidth",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "medium",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "minHeight",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "minWidth",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "opacity",
        "comment": " ",
        "type": "Float -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "opposite",
        "comment": " Calculate the opposite of a size unit value.\n    Ex : opposite (Px 2) == Px -2\n",
        "type": "Elegant.SizeUnit -> Elegant.SizeUnit"
      },
      {
        "name": "overflowAuto",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "overflowHidden",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "overflowScroll",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "overflowVisible",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "padding",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "paddingBottom",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "paddingHorizontal",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "paddingLeft",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "paddingRight",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "paddingTop",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "paddingVertical",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "positionAbsolute",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "positionFixed",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "positionRelative",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "positionStatic",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "right",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "round",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "roundCorner",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "small",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "spaceAround",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "spaceBetween",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "strong",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "style",
        "comment": " ",
        "type": "List Elegant.StyleTransformer -> Html.Attribute msg"
      },
      {
        "name": "textCenter",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "textColor",
        "comment": " ",
        "type": "Color.Color -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "textDecorationNone",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "textJustify",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "textLeft",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "textRight",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "theta",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "tiny",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "top",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "transparent",
        "comment": " ",
        "type": "Color.Color"
      },
      {
        "name": "underline",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "uppercase",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "verticalAlignMiddle",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "visibilityHidden",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "whiteSpaceNoWrap",
        "comment": " ",
        "type": "Elegant.Style -> Elegant.Style"
      },
      {
        "name": "width",
        "comment": " ",
        "type": "Elegant.SizeUnit -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "widthPercent",
        "comment": " ",
        "type": "Float -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "zIndex",
        "comment": " ",
        "type": "Int -> Elegant.Style -> Elegant.Style"
      },
      {
        "name": "zero",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      },
      {
        "name": "zeta",
        "comment": " ",
        "type": "Elegant.SizeUnit"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]